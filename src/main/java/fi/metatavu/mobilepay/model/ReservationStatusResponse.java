package fi.metatavu.mobilepay.model;

import com.fasterxml.jackson.annotation.JsonProperty;

public class ReservationStatusResponse {

  private String posId;
  
  private Integer reservationStatus;

  private String orderId;
  
  private Double amount;
  
  private String customerId;
  
  private String customerToken;

  /**
   * Unique ID that identifies the PoS that has initiated current reservation request.
   *  
   * @return point of sale id
   */
  @JsonProperty("PosId")
  public String getPoSId() {
    return posId;
  }

  public void setPoSId(String posId) {
    this.posId = posId;
  }
  
  /**
   * See status values below
   * 
   * 10 ('Idle') - No reservation request in the queue.
   * 20 ('Issued') - Reservation request is sent to customer.
   * 30 ('AwaitCheckIn') - Await Customer’s check-in.
   * 40 ('Cancel') - Customer has cancelled/rejected reservation request.
   * 50 ('Error') - MobilePay is not able to handle the reservation – the PoS should cancel the MobilePay reservation request.
   * 80 ('ReservationAccepted') - The reservation request is accepted by the customer - await reservation confirmation from the reservation transaction system.
   * 100 ('Done') - Reservation Confirmed" and TransactionId, Amount, CustomerId will contain a value.
   * @return reservation status
   */
  @JsonProperty ("ReservationStatus")
  public Integer getReservationStatus() {
    return reservationStatus;
  }
  
  public void setReservationStatus(Integer reservationStatus) {
    this.reservationStatus = reservationStatus;
  }
  
  /**
   * The OrderId assigned to current reservation.
   * 
   * @return orderId
   */
  @JsonProperty("OrderId")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }
  
  /**
   * The amount for the reservation. Note: Decimal point is “.”
   * 
   * @return amount
   */
  @JsonProperty ("Amount")
  public Double getAmount() {
    return amount;
  }
  
  public void setAmount(Double amount) {
    this.amount = amount;
  }
  
  /**
   * Unique API ID of the customer. The ID is generated by MobilePay when it is installed on the mobile.
   * 
   * @return customer id
   */
  @JsonProperty ("CustomerId")
  public String getCustomerId() {
    return customerId;
  }
  
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }

  /**
   * Contains customer token if customer has checked-In with a merchant token ID related to this merchant’s loyalty program
   * 
   * @return customerToken
   */
  @JsonProperty ("CustomerToken")
  public String getCustomerToken() {
    return customerToken;
  }
  
  public void setCustomerToken(String customerToken) {
    this.customerToken = customerToken;
  }
  
}